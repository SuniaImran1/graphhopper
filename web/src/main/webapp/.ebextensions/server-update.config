files:
    "/download-post-deploy.sh" :
        owner: root
        group: root
        mode: "000755"
        content: |
            #!/bin/bash
            
            echo "DEMO_SITE_AVAILABLE is set to ${DEMO_SITE_AVAILABLE}"
            POST_DEPLOY_SCRIPT=post_deploy_keep_demo.sh
            # Check if we need to remove the demo site
            if [ "${DEMO_SITE_AVAILABLE}" = "false" ]
            then
                POST_DEPLOY_SCRIPT=post_deploy_remove_demo.sh                    
            fi            
            
            echo "POST_DEPLOY_SCRIPT set to ${POST_DEPLOY_SCRIPT}"
            
            # Remove the existing env_vars.sh so it can be replaced
            rm /opt/elasticbeanstalk/hooks/appdeploy/post/99_post_deploy.sh
            
            # Download the file in a location and name that will get executed AFTER the container_commands have been executed and the application deployed 
            AWS_SECRET_ACCESS_KEY=${AWS_SECRET_KEY} aws s3 cp --region eu-west-1 s3://${CONFIG_BUCKET}/${POST_DEPLOY_SCRIPT} /opt/elasticbeanstalk/hooks/appdeploy/post/99_post_deploy.sh
            
            #more /opt/elasticbeanstalk/hooks/appdeploy/post/99_post_deploy.sh
            
            chmod a+x /opt/elasticbeanstalk/hooks/appdeploy/post/99_post_deploy.sh
                        
    "/extract.sh" :
        owner: root
        group: root
        mode: "000755"
        content: |
            #!/bin/bash
            # Remove the existing config.properties so it can be replaced
            rm -f /config.properties
            #fetch the preingested routing data to /
            AWS_SECRET_ACCESS_KEY=${AWS_SECRET_KEY} aws s3 cp --region eu-west-1 s3://${CONFIG_BUCKET}/${ROUTING_ARCHIVE} /
            #fetch applicatio config file
            AWS_SECRET_ACCESS_KEY=${AWS_SECRET_KEY} aws s3 cp --region eu-west-1 s3://${CONFIG_BUCKET}/${ROUTING_CONFIG} /config.properties
            
            # This assumes there is already a tar.bz2 file called ${ROUTING_ARCHIVE} in /
            # Remove existing data
            rm -rf ${graphhopper_graph_location}

            # Extract the route data
            ROUTING_ARCHIVE_FILE=`basename ${ROUTING_ARCHIVE}` 
            tar xvjf /${ROUTING_ARCHIVE_FILE} -C /

            rm /${ROUTING_ARCHIVE_FILE}

            # Change the owner to tomcat
            chown -R tomcat:tomcat ${graphhopper_graph_location}            

            
commands:
    01-install-awscli:
        command: easy_install awscli
    02-create-post-dir:
        command: mkdir /opt/elasticbeanstalk/hooks/appdeploy/post
        ignoreErrors: true

container_commands:
    03-download-env-vars:
        command: /download-post-deploy.sh
    04-download-s3-asset-and-extract:
        command: /extract.sh 
    
         
